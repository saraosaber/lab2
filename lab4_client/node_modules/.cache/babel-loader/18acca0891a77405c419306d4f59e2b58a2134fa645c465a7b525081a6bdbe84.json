{"ast":null,"code":"/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/selector-engine.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { isDisabled, isVisible, parseSelector } from '../util/index.js';\nconst getSelector = element => {\n  let selector = element.getAttribute('data-bs-target');\n  if (!selector || selector === '#') {\n    let hrefAttribute = element.getAttribute('href');\n\n    // The only valid content that could double as a selector are IDs or classes,\n    // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n    // `document.querySelector` will rightfully complain it is invalid.\n    // See https://github.com/twbs/bootstrap/issues/32273\n    if (!hrefAttribute || !hrefAttribute.includes('#') && !hrefAttribute.startsWith('.')) {\n      return null;\n    }\n\n    // Just in case some CMS puts out a full URL with the anchor appended\n    if (hrefAttribute.includes('#') && !hrefAttribute.startsWith('#')) {\n      hrefAttribute = `#${hrefAttribute.split('#')[1]}`;\n    }\n    selector = hrefAttribute && hrefAttribute !== '#' ? parseSelector(hrefAttribute.trim()) : null;\n  }\n  return selector;\n};\nconst SelectorEngine = {\n  find(selector, element = document.documentElement) {\n    return [].concat(...Element.prototype.querySelectorAll.call(element, selector));\n  },\n  findOne(selector, element = document.documentElement) {\n    return Element.prototype.querySelector.call(element, selector);\n  },\n  children(element, selector) {\n    return [].concat(...element.children).filter(child => child.matches(selector));\n  },\n  parents(element, selector) {\n    const parents = [];\n    let ancestor = element.parentNode.closest(selector);\n    while (ancestor) {\n      parents.push(ancestor);\n      ancestor = ancestor.parentNode.closest(selector);\n    }\n    return parents;\n  },\n  prev(element, selector) {\n    let previous = element.previousElementSibling;\n    while (previous) {\n      if (previous.matches(selector)) {\n        return [previous];\n      }\n      previous = previous.previousElementSibling;\n    }\n    return [];\n  },\n  // TODO: this is now unused; remove later along with prev()\n  next(element, selector) {\n    let next = element.nextElementSibling;\n    while (next) {\n      if (next.matches(selector)) {\n        return [next];\n      }\n      next = next.nextElementSibling;\n    }\n    return [];\n  },\n  focusableChildren(element) {\n    const focusables = ['a', 'button', 'input', 'textarea', 'select', 'details', '[tabindex]', '[contenteditable=\"true\"]'].map(selector => `${selector}:not([tabindex^=\"-\"])`).join(',');\n    return this.find(focusables, element).filter(el => !isDisabled(el) && isVisible(el));\n  },\n  getSelectorFromElement(element) {\n    const selector = getSelector(element);\n    if (selector) {\n      return SelectorEngine.findOne(selector) ? selector : null;\n    }\n    return null;\n  },\n  getElementFromSelector(element) {\n    const selector = getSelector(element);\n    return selector ? SelectorEngine.findOne(selector) : null;\n  },\n  getMultipleElementsFromSelector(element) {\n    const selector = getSelector(element);\n    return selector ? SelectorEngine.find(selector) : [];\n  }\n};\nexport default SelectorEngine;","map":{"version":3,"names":["isDisabled","isVisible","parseSelector","getSelector","element","selector","getAttribute","hrefAttribute","includes","startsWith","split","trim","SelectorEngine","find","document","documentElement","concat","Element","prototype","querySelectorAll","call","findOne","querySelector","children","filter","child","matches","parents","ancestor","parentNode","closest","push","prev","previous","previousElementSibling","next","nextElementSibling","focusableChildren","focusables","map","join","el","getSelectorFromElement","getElementFromSelector","getMultipleElementsFromSelector"],"sources":["/Users/ludwigcederberg/Documents/University/Courses/Webbprogrammering/lab3/node_modules/bootstrap/js/src/dom/selector-engine.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/selector-engine.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { isDisabled, isVisible, parseSelector } from '../util/index.js'\n\nconst getSelector = element => {\n  let selector = element.getAttribute('data-bs-target')\n\n  if (!selector || selector === '#') {\n    let hrefAttribute = element.getAttribute('href')\n\n    // The only valid content that could double as a selector are IDs or classes,\n    // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n    // `document.querySelector` will rightfully complain it is invalid.\n    // See https://github.com/twbs/bootstrap/issues/32273\n    if (!hrefAttribute || (!hrefAttribute.includes('#') && !hrefAttribute.startsWith('.'))) {\n      return null\n    }\n\n    // Just in case some CMS puts out a full URL with the anchor appended\n    if (hrefAttribute.includes('#') && !hrefAttribute.startsWith('#')) {\n      hrefAttribute = `#${hrefAttribute.split('#')[1]}`\n    }\n\n    selector = hrefAttribute && hrefAttribute !== '#' ? parseSelector(hrefAttribute.trim()) : null\n  }\n\n  return selector\n}\n\nconst SelectorEngine = {\n  find(selector, element = document.documentElement) {\n    return [].concat(...Element.prototype.querySelectorAll.call(element, selector))\n  },\n\n  findOne(selector, element = document.documentElement) {\n    return Element.prototype.querySelector.call(element, selector)\n  },\n\n  children(element, selector) {\n    return [].concat(...element.children).filter(child => child.matches(selector))\n  },\n\n  parents(element, selector) {\n    const parents = []\n    let ancestor = element.parentNode.closest(selector)\n\n    while (ancestor) {\n      parents.push(ancestor)\n      ancestor = ancestor.parentNode.closest(selector)\n    }\n\n    return parents\n  },\n\n  prev(element, selector) {\n    let previous = element.previousElementSibling\n\n    while (previous) {\n      if (previous.matches(selector)) {\n        return [previous]\n      }\n\n      previous = previous.previousElementSibling\n    }\n\n    return []\n  },\n  // TODO: this is now unused; remove later along with prev()\n  next(element, selector) {\n    let next = element.nextElementSibling\n\n    while (next) {\n      if (next.matches(selector)) {\n        return [next]\n      }\n\n      next = next.nextElementSibling\n    }\n\n    return []\n  },\n\n  focusableChildren(element) {\n    const focusables = [\n      'a',\n      'button',\n      'input',\n      'textarea',\n      'select',\n      'details',\n      '[tabindex]',\n      '[contenteditable=\"true\"]'\n    ].map(selector => `${selector}:not([tabindex^=\"-\"])`).join(',')\n\n    return this.find(focusables, element).filter(el => !isDisabled(el) && isVisible(el))\n  },\n\n  getSelectorFromElement(element) {\n    const selector = getSelector(element)\n\n    if (selector) {\n      return SelectorEngine.findOne(selector) ? selector : null\n    }\n\n    return null\n  },\n\n  getElementFromSelector(element) {\n    const selector = getSelector(element)\n\n    return selector ? SelectorEngine.findOne(selector) : null\n  },\n\n  getMultipleElementsFromSelector(element) {\n    const selector = getSelector(element)\n\n    return selector ? SelectorEngine.find(selector) : []\n  }\n}\n\nexport default SelectorEngine\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}