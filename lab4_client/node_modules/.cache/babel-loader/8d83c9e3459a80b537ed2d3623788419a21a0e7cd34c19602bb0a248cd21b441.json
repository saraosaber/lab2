{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\nimport inventory from './inventory.mjs';\nclass Salad {\n  constructor(salad) {\n    this.uuid = uuidv4();\n    if (arguments.length > 0) {\n      var _salad$uuid;\n      this.ingredients = {\n        ...salad.ingredients\n      };\n      this.uuid = (_salad$uuid = salad.uuid) !== null && _salad$uuid !== void 0 ? _salad$uuid : this.uuid;\n    } else {\n      this.ingredients = {};\n    }\n    this.id = \"salad_\" + Salad.instanceCounter++;\n  }\n  add(name, properties) {\n    this.ingredients[name] = properties;\n    return this;\n  }\n  remove(name) {\n    if (this.ingredients.hasOwnProperty(name)) {\n      delete this.ingredients[name];\n    } else {\n      console.error(`Invalid ingredient: ${name}`);\n    }\n    return this;\n  }\n  getPrice() {\n    let sum = 0;\n    Object.keys(this.ingredients).forEach(i => {\n      if (i === 'extra') {\n        Object.keys(this.ingredients[i]).forEach(j => {\n          sum += inventory[j].price;\n        });\n      } else {\n        sum += inventory[this.ingredients[i]].price;\n      }\n    });\n    return sum;\n  }\n  count(prop) {\n    return Object.values(this.ingredients).filter(x => x[prop]).reduce((sum, x) => sum += 1, 0);\n  }\n  static parse(json) {\n    const parsed = JSON.parse(json);\n    if (Array.isArray(parsed)) {\n      let res = [];\n      for (let i = 0; i < parsed.length; i++) {\n        res.push(new Salad(parsed[i]));\n      }\n      return res;\n    } else {\n      return new Salad(parsed);\n    }\n  }\n}\nSalad.instanceCounter = 0;\nexport default Salad;","map":{"version":3,"names":["v4","uuidv4","inventory","Salad","constructor","salad","uuid","arguments","length","_salad$uuid","ingredients","id","instanceCounter","add","name","properties","remove","hasOwnProperty","console","error","getPrice","sum","Object","keys","forEach","i","j","price","count","prop","values","filter","x","reduce","parse","json","parsed","JSON","Array","isArray","res","push"],"sources":["/Users/ludwigcederberg/Documents/University/Courses/Webbprogrammering/Lab2/lab2/src/Salad.js"],"sourcesContent":["import { v4 as uuidv4 } from 'uuid';\n\nimport inventory from './inventory.mjs';\n\nclass Salad {\n  constructor(salad) {\n    this.uuid = uuidv4();\n    if (arguments.length > 0){\n      this.ingredients = {...(salad.ingredients)};\n      this.uuid = (salad.uuid ?? this.uuid);\n    } else {\n      this.ingredients = {};\n    }\n    this.id = \"salad_\" + Salad.instanceCounter++;\n    \n  }\n\n  static instanceCounter = 0;\n  \n\n  add(name, properties) {\n    this.ingredients[name] = properties;\n    return this;\n  }\n\n  remove(name) {\n    if (this.ingredients.hasOwnProperty(name)) {\n      delete this.ingredients[name];\n    } else {\n      console.error(`Invalid ingredient: ${name}`);\n    }\n    return this;\n  }\n\n  getPrice () {\n    let sum = 0;\n    Object.keys(this.ingredients).forEach(i => {\n      if (i === 'extra') {\n        Object.keys(this.ingredients[i]).forEach(j => {\n          sum += inventory[j].price\n        })\n      } else {\n        sum += inventory[this.ingredients[i]].price\n      }\n    })\n    return sum\n  }\n\n  count(prop) {\n    return Object.values(this.ingredients).filter((x) => x[prop]).reduce((sum, x) => sum += 1, 0);\n  }\n\n  static parse(json) {\n    const parsed = JSON.parse(json);\n    if (Array.isArray(parsed)){\n      let res = []\n        for (let i = 0; i < (parsed.length); i++) {\n          res.push(new Salad(parsed[i]));\n        }\n        return res;\n      } else {\n        return new Salad(parsed);\n      }\n  } \n}\n\nexport default Salad;"],"mappings":"AAAA,SAASA,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAEnC,OAAOC,SAAS,MAAM,iBAAiB;AAEvC,MAAMC,KAAK,CAAC;EACVC,WAAWA,CAACC,KAAK,EAAE;IACjB,IAAI,CAACC,IAAI,GAAGL,MAAM,CAAC,CAAC;IACpB,IAAIM,SAAS,CAACC,MAAM,GAAG,CAAC,EAAC;MAAA,IAAAC,WAAA;MACvB,IAAI,CAACC,WAAW,GAAG;QAAC,GAAIL,KAAK,CAACK;MAAY,CAAC;MAC3C,IAAI,CAACJ,IAAI,IAAAG,WAAA,GAAIJ,KAAK,CAACC,IAAI,cAAAG,WAAA,cAAAA,WAAA,GAAI,IAAI,CAACH,IAAK;IACvC,CAAC,MAAM;MACL,IAAI,CAACI,WAAW,GAAG,CAAC,CAAC;IACvB;IACA,IAAI,CAACC,EAAE,GAAG,QAAQ,GAAGR,KAAK,CAACS,eAAe,EAAE;EAE9C;EAKAC,GAAGA,CAACC,IAAI,EAAEC,UAAU,EAAE;IACpB,IAAI,CAACL,WAAW,CAACI,IAAI,CAAC,GAAGC,UAAU;IACnC,OAAO,IAAI;EACb;EAEAC,MAAMA,CAACF,IAAI,EAAE;IACX,IAAI,IAAI,CAACJ,WAAW,CAACO,cAAc,CAACH,IAAI,CAAC,EAAE;MACzC,OAAO,IAAI,CAACJ,WAAW,CAACI,IAAI,CAAC;IAC/B,CAAC,MAAM;MACLI,OAAO,CAACC,KAAK,CAAE,uBAAsBL,IAAK,EAAC,CAAC;IAC9C;IACA,OAAO,IAAI;EACb;EAEAM,QAAQA,CAAA,EAAI;IACV,IAAIC,GAAG,GAAG,CAAC;IACXC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACb,WAAW,CAAC,CAACc,OAAO,CAACC,CAAC,IAAI;MACzC,IAAIA,CAAC,KAAK,OAAO,EAAE;QACjBH,MAAM,CAACC,IAAI,CAAC,IAAI,CAACb,WAAW,CAACe,CAAC,CAAC,CAAC,CAACD,OAAO,CAACE,CAAC,IAAI;UAC5CL,GAAG,IAAInB,SAAS,CAACwB,CAAC,CAAC,CAACC,KAAK;QAC3B,CAAC,CAAC;MACJ,CAAC,MAAM;QACLN,GAAG,IAAInB,SAAS,CAAC,IAAI,CAACQ,WAAW,CAACe,CAAC,CAAC,CAAC,CAACE,KAAK;MAC7C;IACF,CAAC,CAAC;IACF,OAAON,GAAG;EACZ;EAEAO,KAAKA,CAACC,IAAI,EAAE;IACV,OAAOP,MAAM,CAACQ,MAAM,CAAC,IAAI,CAACpB,WAAW,CAAC,CAACqB,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACH,IAAI,CAAC,CAAC,CAACI,MAAM,CAAC,CAACZ,GAAG,EAAEW,CAAC,KAAKX,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;EAC/F;EAEA,OAAOa,KAAKA,CAACC,IAAI,EAAE;IACjB,MAAMC,MAAM,GAAGC,IAAI,CAACH,KAAK,CAACC,IAAI,CAAC;IAC/B,IAAIG,KAAK,CAACC,OAAO,CAACH,MAAM,CAAC,EAAC;MACxB,IAAII,GAAG,GAAG,EAAE;MACV,KAAK,IAAIf,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAIW,MAAM,CAAC5B,MAAO,EAAEiB,CAAC,EAAE,EAAE;QACxCe,GAAG,CAACC,IAAI,CAAC,IAAItC,KAAK,CAACiC,MAAM,CAACX,CAAC,CAAC,CAAC,CAAC;MAChC;MACA,OAAOe,GAAG;IACZ,CAAC,MAAM;MACL,OAAO,IAAIrC,KAAK,CAACiC,MAAM,CAAC;IAC1B;EACJ;AACF;AA5DMjC,KAAK,CAaFS,eAAe,GAAG,CAAC;AAiD5B,eAAeT,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}