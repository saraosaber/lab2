{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\nimport inventory from './inventory.mjs';\nclass Salad {\n  constructor(salad) {\n    this.uuid = uuidv4();\n    if (arguments.length > 0) {\n      var _salad$uuid;\n      this.ingredients = {\n        ...salad.ingredients\n      };\n      let buffer = this.ingredients.extra;\n      delete this.ingredients.extra;\n      console.log(buffer);\n      this.ingredients = {\n        ...this.ingredients,\n        ...buffer\n      };\n      this.uuid = (_salad$uuid = salad.uuid) !== null && _salad$uuid !== void 0 ? _salad$uuid : this.uuid;\n    } else {\n      this.ingredients = {};\n    }\n    this.id = \"salad_\" + Salad.instanceCounter++;\n  }\n  add(name, properties) {\n    this.ingredients[name] = properties;\n    return this;\n  }\n  remove(name) {\n    if (this.ingredients.hasOwnProperty(name)) {\n      delete this.ingredients[name];\n    } else {\n      console.error(`Invalid ingredient: ${name}`);\n    }\n    return this;\n  }\n  getPrice() {\n    console.log(this.ingredients);\n    Object.values(this.ingredients).reduce((acc, curr) => {\n      return acc + inventory[curr].price;\n    });\n    return Object.values(this.ingredients).reduce((sum, ing) => sum += inventory[ing].price, 0);\n  }\n  count(prop) {\n    return Object.values(this.ingredients).filter(x => x[prop]).reduce((sum, x) => sum += 1, 0);\n  }\n  static parse(json) {\n    const parsed = JSON.parse(json);\n    if (Array.isArray(parsed)) {\n      let res = [];\n      for (let i = 0; i < parsed.length; i++) {\n        res.push(new Salad(parsed[i]));\n      }\n      return res;\n    } else {\n      return new Salad(parsed);\n    }\n  }\n}\nSalad.instanceCounter = 0;\nexport default Salad;","map":{"version":3,"names":["v4","uuidv4","inventory","Salad","constructor","salad","uuid","arguments","length","_salad$uuid","ingredients","buffer","extra","console","log","id","instanceCounter","add","name","properties","remove","hasOwnProperty","error","getPrice","Object","values","reduce","acc","curr","price","sum","ing","count","prop","filter","x","parse","json","parsed","JSON","Array","isArray","res","i","push"],"sources":["/Users/ludwigcederberg/Documents/University/Courses/Webbprogrammering/Lab2/lab2/src/Salad.js"],"sourcesContent":["import { v4 as uuidv4 } from 'uuid';\n\nimport inventory from './inventory.mjs';\n\nclass Salad {\n  constructor(salad) {\n    this.uuid = uuidv4();\n    if (arguments.length > 0){\n      this.ingredients = {...(salad.ingredients)};\n      let buffer = this.ingredients.extra;\n      delete this.ingredients.extra\n      console.log(buffer)\n      this.ingredients = {...this.ingredients, ...buffer}\n      this.uuid = (salad.uuid ?? this.uuid);\n    } else {\n      this.ingredients = {};\n    }\n    this.id = \"salad_\" + Salad.instanceCounter++;\n    \n  }\n\n  static instanceCounter = 0;\n  \n\n  add(name, properties) {\n    this.ingredients[name] = properties;\n    return this;\n  }\n\n  remove(name) {\n    if (this.ingredients.hasOwnProperty(name)) {\n      delete this.ingredients[name];\n    } else {\n      console.error(`Invalid ingredient: ${name}`);\n    }\n    return this;\n  }\n\n  getPrice () {\n    console.log(this.ingredients)\n    Object.values(this.ingredients).reduce((acc, curr) => {\n      return acc + inventory[curr].price\n    })\n    return Object.values(this.ingredients).reduce((sum, ing) => sum += inventory[ing].price, 0);\n  }\n\n  count(prop) {\n    return Object.values(this.ingredients).filter((x) => x[prop]).reduce((sum, x) => sum += 1, 0);\n  }\n\n  static parse(json) {\n    const parsed = JSON.parse(json);\n    if (Array.isArray(parsed)){\n      let res = []\n        for (let i = 0; i < (parsed.length); i++) {\n          res.push(new Salad(parsed[i]));\n        }\n        return res;\n      } else {\n        return new Salad(parsed);\n      }\n  } \n}\n\nexport default Salad;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}