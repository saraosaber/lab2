{"ast":null,"code":"const inventory = {\n  Sallad: {\n    price: 10,\n    foundation: true,\n    vegan: true\n  },\n  Pasta: {\n    price: 10,\n    foundation: true,\n    gluten: true\n  },\n  'Sallad + Pasta': {\n    price: 10,\n    foundation: true,\n    gluten: true\n  },\n  'Sallad + Matvete': {\n    price: 10,\n    foundation: true,\n    vegan: true,\n    gluten: true\n  },\n  'Sallad + Glasnudlar': {\n    price: 10,\n    foundation: true,\n    gluten: true\n  },\n  'Sallad + Quinoa': {\n    price: 10,\n    foundation: true,\n    vegan: true\n  },\n  'Kycklingfilé': {\n    price: 10,\n    protein: true\n  },\n  'Rökt kalkonfilé': {\n    price: 10,\n    protein: true\n  },\n  'Norsk fjordlax': {\n    price: 30,\n    protein: true\n  },\n  'Handskalade räkor från Smögen': {\n    price: 40,\n    protein: true\n  },\n  'Pulled beef från Sverige': {\n    price: 15,\n    protein: true\n  },\n  'Marinerad bönmix': {\n    price: 10,\n    protein: true,\n    vegan: true\n  },\n  Avocado: {\n    price: 10,\n    extra: true,\n    vegan: true\n  },\n  Bacon: {\n    price: 10,\n    extra: true\n  },\n  'Böngroddar': {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  'Cashewnötter': {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  'Chèvreost': {\n    price: 15,\n    extra: true,\n    lactose: true\n  },\n  Fetaost: {\n    price: 5,\n    extra: true,\n    lactose: true\n  },\n  'Färsk koriander': {\n    price: 10,\n    extra: true,\n    vegan: true\n  },\n  Gurka: {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  'Inlagd lök': {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  Jalapeno: {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  'Krossade jordnötter': {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  Krutonger: {\n    price: 5,\n    extra: true,\n    gluten: true\n  },\n  'Körsbärstomater': {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  Lime: {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  Majs: {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  Oliver: {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  Paprika: {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  Parmesan: {\n    price: 5,\n    extra: true,\n    lactose: true\n  },\n  'Rivna morötter': {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  'Rostade sesamfrön': {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  Ruccola: {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  'Rödlök': {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  'Sojabönor': {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  'Soltorkad tomat': {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  Tomat: {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  'Valnötter': {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  'Ägg': {\n    price: 5,\n    extra: true\n  },\n  Ceasardressing: {\n    price: 5,\n    dressing: true,\n    lactose: true\n  },\n  Dillmayo: {\n    price: 5,\n    dressing: true\n  },\n  Honungsdijon: {\n    price: 5,\n    dressing: true,\n    vegan: true\n  },\n  Kimchimayo: {\n    price: 5,\n    dressing: true\n  },\n  Pesto: {\n    price: 5,\n    dressing: true,\n    lactose: true\n  },\n  Rhodeisland: {\n    price: 5,\n    dressing: true,\n    lactose: true\n  },\n  'Rostad aioli': {\n    price: 5,\n    dressing: true\n  },\n  'Soyavinägrett': {\n    price: 5,\n    dressing: true,\n    vegan: true\n  },\n  'Örtvinägrett': {\n    price: 5,\n    dressing: true,\n    vegan: true\n  }\n};\n\n// recursively freeze the data structure.\n(function () {\n  Object.freeze(inventory);\n  deepFreeze(inventory);\n  function deepFreeze(obj) {\n    Object.keys(obj).forEach(prop => deepFreeze(obj[prop]));\n    Object.freeze(obj);\n  }\n})();\nexport default inventory;","map":{"version":3,"names":["inventory","Sallad","price","foundation","vegan","Pasta","gluten","protein","Avocado","extra","Bacon","lactose","Fetaost","Gurka","Jalapeno","Krutonger","Lime","Majs","Oliver","Paprika","Parmesan","Ruccola","Tomat","Ceasardressing","dressing","Dillmayo","Honungsdijon","Kimchimayo","Pesto","Rhodeisland","Object","freeze","deepFreeze","obj","keys","forEach","prop"],"sources":["/Users/ludwigcederberg/Documents/University/Courses/Webbprogrammering/lab4/lab4_client/src/inventory.mjs"],"sourcesContent":["const inventory = {\n  Sallad: { price: 10, foundation: true, vegan: true },\n  Pasta: { price: 10, foundation: true, gluten: true },\n  'Sallad + Pasta': { price: 10, foundation: true, gluten: true },\n  'Sallad + Matvete': { price: 10, foundation: true, vegan: true, gluten: true },\n  'Sallad + Glasnudlar': { price: 10, foundation: true, gluten: true },\n  'Sallad + Quinoa': { price: 10, foundation: true, vegan: true },\n\n  'Kycklingfilé': { price: 10, protein: true },\n  'Rökt kalkonfilé': { price: 10, protein: true },\n  'Norsk fjordlax': { price: 30, protein: true },\n  'Handskalade räkor från Smögen': { price: 40, protein: true },\n  'Pulled beef från Sverige': { price: 15, protein: true },\n  'Marinerad bönmix': { price: 10, protein: true, vegan: true },\n\n  Avocado: { price: 10, extra: true, vegan: true },\n  Bacon: { price: 10, extra: true },\n  'Böngroddar': { price: 5, extra: true, vegan: true },\n  'Cashewnötter': { price: 5, extra: true, vegan: true },\n  'Chèvreost': { price: 15, extra: true, lactose: true },\n  Fetaost: { price: 5, extra: true, lactose: true },\n  'Färsk koriander': { price: 10, extra: true, vegan: true },\n  Gurka: { price: 5, extra: true, vegan: true },\n  'Inlagd lök': { price: 5, extra: true, vegan: true },\n  Jalapeno: { price: 5, extra: true, vegan: true },\n  'Krossade jordnötter': { price: 5, extra: true, vegan: true },\n  Krutonger: { price: 5, extra: true, gluten: true },\n  'Körsbärstomater': { price: 5, extra: true, vegan: true },\n  Lime: { price: 5, extra: true, vegan: true },\n  Majs: { price: 5, extra: true, vegan: true },\n  Oliver: { price: 5, extra: true, vegan: true },\n  Paprika: { price: 5, extra: true, vegan: true },\n  Parmesan: { price: 5, extra: true, lactose: true },\n  'Rivna morötter': { price: 5, extra: true, vegan: true },\n  'Rostade sesamfrön': { price: 5, extra: true, vegan: true },\n  Ruccola: { price: 5, extra: true, vegan: true },\n  'Rödlök': { price: 5, extra: true, vegan: true },\n  'Sojabönor': { price: 5, extra: true, vegan: true },\n  'Soltorkad tomat': { price: 5, extra: true, vegan: true },\n  Tomat: { price: 5, extra: true, vegan: true },\n  'Valnötter': { price: 5, extra: true, vegan: true },\n  'Ägg': { price: 5, extra: true },\n\n  Ceasardressing: { price: 5, dressing: true, lactose: true },\n  Dillmayo: { price: 5, dressing: true },\n  Honungsdijon: { price: 5, dressing: true, vegan: true },\n  Kimchimayo: { price: 5, dressing: true },\n  Pesto: { price: 5, dressing: true, lactose: true },\n  Rhodeisland: { price: 5, dressing: true, lactose: true },\n  'Rostad aioli': { price: 5, dressing: true },\n  'Soyavinägrett': { price: 5, dressing: true, vegan: true },\n  'Örtvinägrett': { price: 5, dressing: true, vegan: true },\n};\n\n// recursively freeze the data structure.\n(function () {\n  Object.freeze(inventory);\n  deepFreeze(inventory);\n  function deepFreeze(obj) {\n    Object.keys(obj).forEach(prop => deepFreeze(obj[prop]));\n    Object.freeze(obj);\n  }\n})();\n\nexport default inventory;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}